// Для генерации вызываем:
// protoc  --go_out=../../pkg/api --go_opt=paths=source_relative --go-grpc_out=../../pkg/api --go-grpc_opt=paths=source_relative adder.proto
syntax = "proto3";

option go_package = "api/proto";

package api;


message User {
  string name = 1;  // имя пользователя
  enum Sex {
    UNSPECIFIED = 0;
    MAN = 1;
    WOMAN = 2;
  }
  // (1) добавьте поля для пола и email
  Sex sex = 2;      // пол
  string email = 3; // email
}

message AddUserRequest {
  User user = 1;
}

message AddUserResponse {
  string error = 1; // ошибка
}

message ListUsersRequest {
  int32 offset = 1; // смещение выборки
  int32 limit = 2;  // количество элементов
}

message ListUsersResponse {
  int32  count = 1;           // общее количество пользователей
  // (2) добавьте поле для списка email
  repeated string emails = 2;
}

message GetUserRequest {
  string email = 1;
}

message GetUserResponse {
  User   user = 1;
  string error = 2;
}

// (3) добавьте DelUseRequest и DelUserResponse
message DelUserRequest {
  string email = 1;
}

message DelUserResponse {
  string error = 1;
}

service Users {
  rpc AddUser(AddUserRequest) returns (AddUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  // (4) добавьте интерфейсы GetUser и DelUser
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc DelUser(DelUserRequest) returns (DelUserResponse);
}